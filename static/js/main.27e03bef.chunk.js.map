{"version":3,"sources":["components/chart/chart.module.css","App.module.css","components/cards/cards.jsx","Api/index.js","components/chart/chart.jsx","components/countrypicker/countrypicker.jsx","App.js","index.js","components/cards/cards.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchdata","country","a","changeurl","axios","get","modofieddata","fetchDailydata","modifieddata","map","dailydata","total","date","reportDate","countries","name","Chart","useState","setDailydata","useEffect","fetchapi","linechar","labels","datasets","label","borderColor","fill","backgroundColor","barchar","options","legend","display","title","text","Countrypicker","props","countrie","setcountries","fetchcountries","FormControl","formcontainer","NativeSelect","defaultValue","onChange","e","handlecountrychange","target","i","key","App","state","fetcheddata","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27e03bef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__2iKt5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1oYRn\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport styles from './cards.module.css'\r\nimport Countup from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    \r\n    if(!confirmed) return 'Loading...'\r\n\r\n    \r\n\r\n    return (\r\n    <div className={styles.container}>\r\n\r\n        <Grid container spacing={3} justify = \"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)} > \r\n            <CardContent>\r\n                <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n    <Typography variant=\"h5\">{\r\n        <Countup\r\n        start={0}\r\n        end={confirmed.value}\r\n        duration={1}\r\n        separator=\",\"\r\n        />\r\n    }</Typography>\r\n                <Typography color=\"textPrimary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of Active cases of COVID-19</Typography>\r\n            </CardContent>\r\n\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)} > \r\n            <CardContent>\r\n                <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup\r\n        start={0}\r\n        end={recovered.value}\r\n        duration={1}\r\n        separator=\",\"\r\n        /></Typography>\r\n                <Typography color=\"textPrimary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of Recoveries cases of COVID-19</Typography>\r\n            </CardContent>\r\n\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)} > \r\n            <CardContent>\r\n                <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n    <Typography variant=\"h5\">\r\n        <Countup\r\n        start={0}\r\n        end={deaths.value}\r\n        duration={1}\r\n        separator=\",\"\r\n        /></Typography>\r\n                <Typography color=\"textPrimary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of Deaths caused by COVID-19</Typography>\r\n            </CardContent>\r\n\r\n        </Grid>\r\n\r\n        </Grid>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchdata = async (country) =>{\r\n\r\n    let changeurl= url;\r\n\r\nif(country && country!==\"global\" ){\r\n    changeurl=`${url}/countries/${country}`\r\n}\r\n\r\n\r\n    try{\r\n\r\n        const { data } = await axios.get(changeurl)\r\n\r\n        const modofieddata={\r\n            confirmed:data.confirmed,\r\n            recovered:data.recovered,\r\n            deaths:data.deaths,\r\n            lastUpdate:data.lastUpdate\r\n        }\r\n\r\n        return modofieddata\r\n          \r\n    }catch(error){\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailydata = async() =>{\r\n\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`)\r\n\r\n       const modifieddata = data.map((dailydata)=>({\r\n           confirmed:dailydata.confirmed.total,\r\n           deaths:dailydata.deaths.total,\r\n           date:dailydata.reportDate\r\n       }))\r\n       \r\n\r\n       return modifieddata\r\n    } catch(error){\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const countries = async()=>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country)=>country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport {fetchDailydata} from '../../Api/index'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\nimport styles from './chart.module.css'\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n\r\n    const [dailydata,setDailydata] = useState([]);\r\n\r\nuseEffect(()=>{\r\n    const fetchapi= async()=>{\r\n        setDailydata(await fetchDailydata())\r\n    }\r\n\r\n    fetchapi();\r\n    \r\n},[])\r\n\r\nconst linechar=(\r\n<Line\r\n\r\ndata={{\r\n    labels:dailydata.map(({date})=> date),\r\n    datasets:[{\r\n   data:dailydata.map(({confirmed})=> confirmed),\r\n   label:'Infected',\r\n   borderColor:'#3333ff',\r\n   fill:true\r\n    },{\r\n     data:dailydata.map(({deaths})=> deaths),\r\n     label:'Deaths',\r\n     borderColor:'red',\r\n     backgroundColor:'rgba(255,0,0,0.5)',\r\n     fill:true\r\n    }]\r\n}}\r\n/> \r\n\r\n)\r\n\r\nconst barchar = (\r\n  confirmed ?(\r\n    <Bar\r\n    data={{\r\n        labels:['Infected','Recovered','Deaths'],\r\n        datasets:[{\r\n            label:'People',\r\n            backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n            data:[confirmed.value,recovered.value,deaths.value]\r\n        }]\r\n    }}\r\n\r\n    options={{\r\n        legend:{display:false},\r\n        title:{display:true, text:`Current state in ${country}`}\r\n    }}\r\n    /> ):null\r\n)\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={styles.container}>\r\n      {country  ? barchar:linechar}\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useState,useEffect } from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './countrypicker.module.css'\r\nimport {countries} from '../../Api/index'\r\n\r\n\r\nconst Countrypicker = (props) => {\r\n\r\n    const [countrie, setcountries] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchcountries= async()=>{\r\n            setcountries(await countries())\r\n        }\r\n    \r\n        fetchcountries();\r\n        \r\n    },[setcountries])\r\n\r\n   \r\n\r\n\r\n    return (\r\n       <FormControl className={styles.formcontainer}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e)=>props.handlecountrychange(e.target.value)}>\r\n              <option value=\"\">Global</option>\r\n               {countrie.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default Countrypicker","import React from 'react';\r\nimport Cards from './components/cards/cards'\r\nimport Chart from './components/chart/chart'\r\nimport Countrypicker from './components/countrypicker/countrypicker'\r\nimport styles from './App.module.css'\r\nimport {fetchdata } from './Api/index'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data:{},\r\n        country:\"\"\r\n    }\r\n\r\n  async componentDidMount() {\r\n        const fetcheddata = await fetchdata();\r\n        this.setState({data:fetcheddata})\r\n    }\r\n\r\n    handlecountrychange = async(country)=>{\r\n \r\n//console.log(country)\r\n        const fetcheddata = await fetchdata(country);\r\n        this.setState({data:fetcheddata,country:country})\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {data} = this.state\r\n        const {country} = this.state\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <Cards data={data}/>\r\n                <Countrypicker handlecountrychange={this.handlecountrychange} />\r\n                <Chart data={data} country={country} />\r\n                \r\n            </div>\r\n        \r\n        )\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__1fozO\",\"card\":\"cards_card__2yZWn\",\"infected\":\"cards_infected__2i_pC\",\"recovered\":\"cards_recovered__1lQz7\",\"deaths\":\"cards_deaths__3ytsa\"};"],"sourceRoot":""}